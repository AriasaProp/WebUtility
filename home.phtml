<style type="text/css">
header {
	color: white;
	min-height: 105vh;
	background-size: cover;
	background-position: center;
	background-repeat: no-repeat;
	width: 100%;
	position: relative;
	display: flex;
	align-items: center;
  background-image: url(img/sample-wide-image.webp);
}
header:after {
  content: '';
  display: block;
  position: absolute;
  width: 100%;
  height: 25vh;
  bottom: -.01vh;
  background: linear-gradient(0deg, var(--body) 0.5%, #fff0 99.5%);
}

.nav-present {
	flex-direction: column;
	position: relative;
	padding: 0;
	background-color: transparent;
	box-shadow: none;
	flex-wrap: nowrap;
	flex-grow: 1;
	margin: 10px;
}
.nav-present > #nav-head {
	font-size: 25vmin;
  margin: 0;
}
.nav-present > #nav-menu {
	margin-top: 30px;
	order: 1;
}
.nav-present > #nav-menu a {
	font-size: 24pt;
	mix-blend-mode: difference;
}
.nav-present > #nav-search {
  font-size: 20pt;
  display: flex;
  max-width: 900px;
  width: 100%;
}
.nav-present > #nav-menu #nav-search-switch {
  display: none;
}

#container {
  font-family: 'Poppins';
	padding: 15px;
	width: 100%;
}
#container h1 {
	text-align: center;
}
#contents {
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  gap: 30px;
  margin: 25px;
}
#contents a {
  width: 200px;
  height: 200px;
  justify-content: center;
  font-weight: 700;
  text-align: center;
  display: flex;
  flex-direction: column;
  color: black;
  align-items: center;
  background-color: var(--opposite);
  box-shadow: 0 0 1em #0003;
  transition: 0.3s;
  padding: auto 0;
  border-radius: 5px; /* 5px rounded corners */
  font-size: 20pt;
}
#contents a i {
  margin: 0;
  font-size: 4em;
  display: block;
}
</style>
<div id="container">
	<h1>Contents</h1>
	<div id="contents">
	  <a href="/game">
	    <i>&#xf11b;</i>Game
	  </a>
	  <a>
	    <i>&#xe804;</i>Art
	  </a>
	  <a>
	    <i>&#xe806;</i>Informations
	  </a>
	  <a>
	    <i>&#xf0ae;</i>Task
	  </a>
	</div>
</div>
<script type="text/javascript" defer>
const nav = document.getElementById('nav-main')
new IntersectionObserver(entries => {
	entries.forEach(entry => {
		nav.classList.toggle('nav-present', entry.isIntersecting)
	})
}, {
	threshold: .5,
}).observe(document.getElementsByTagName('header')[0])
</script>

